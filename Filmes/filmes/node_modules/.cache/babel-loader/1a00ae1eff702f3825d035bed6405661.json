{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\React-JS\\\\filmes\\\\src\\\\pages\\\\home\\\\genero\\\\indeix.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../../../components/footer';\nimport Header from '../../../components/header/index';\nimport imgTheater from '../../../assets/images/theater.png';\nimport '../genero/style.css';\n\nfunction Genero() {\n  //prop string genero {get; set;} = \"\";\n  const [idGenero, setIdGenero] = useState(0);\n  const [genero, setGenero] = useState('');\n  const [generos, setGeneros] = useState([]); //useEffect te permite executar efeitos colaterais em componentes funcionais\n  //Buscar dados é um exemplo de efeito colateral\n  //usando o useEffect informo ao React que o componente somente depois da renderização\n  //é executado depois da renderização do componente, quando ele já estiver montado na DOM\n\n  useEffect(() => {\n    listar();\n  }, []);\n\n  const listar = () => {\n    fetch('http://localhost:5000/api/generos', {\n      method: 'GET',\n      headers: {\n        //Bearer authentication é o token authentication, um Schema para autenticação HTTP \n        //O Bearer identifica recursos protegidos por um OAuth2.\n        authorization: 'Bearer ' + localStorage.getItem('token-filmes')\n      }\n    }).then(response => response.json()).then(dados => {\n      setGeneros(dados);\n    }).catch(err => console.error(err));\n  };\n\n  const trash = id => {\n    if (window.confirm('Deseja excluir o Genero?')) {\n      fetch('http://localhost:5000/api/generos/' + id, {\n        method: 'DELETE',\n        headers: {\n          authorization: 'Bearer ' + localStorage.getItem('token-filmes')\n        }\n      }).then(response => response.json()).then(dados => {\n        listar();\n      }).catch(err => console.error(err));\n    }\n  };\n\n  const refresh = id => {\n    fetch('http://localhost:5000/api/generos/' + id, {\n      method: 'GET',\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('token-filmes')\n      }\n    }).then(response => response.json()).then(dados => {\n      setIdGenero(dados.idGenero);\n      setGenero(dados.nome);\n    }).catch(err => console.error(err));\n  };\n\n  const salvar = () => {\n    const form = {\n      nome: genero\n    };\n    const method = idGenero === 0 ? 'POST' : 'PUT';\n    const urlRequest = idGenero === 0 ? 'http://localhost:5000/api/generos' : 'http://localhost:5000/api/generos/' + idGenero;\n    fetch(urlRequest, {\n      method: method,\n      body: JSON.stringify(form),\n      headers: {\n        'content-type': 'application/json',\n        authorization: 'Bearer ' + localStorage.getItem('token-filmes')\n      }\n    }).then(() => {\n      alert('Genero cadastrado');\n      setIdGenero(0);\n      setGenero('');\n      listar();\n    }).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    description: \"Faça o login e acesse a Coletânea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imgTitulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"theater\",\n    src: imgTheater,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ListGenero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default Genero;","map":{"version":3,"sources":["C:/Users/senai/Desktop/React-JS/filmes/src/pages/home/genero/indeix.tsx"],"names":["React","useEffect","useState","Footer","Header","imgTheater","Genero","idGenero","setIdGenero","genero","setGenero","generos","setGeneros","listar","fetch","method","headers","authorization","localStorage","getItem","then","response","json","dados","catch","err","console","error","trash","id","window","confirm","refresh","nome","salvar","form","urlRequest","body","JSON","stringify","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Footer from '../../../components/footer';\r\nimport Header from '../../../components/header/index';\r\nimport imgRefresh from '../../../assets/images/refresh.png';\r\nimport imgTrash from '../../../assets/images/trash.png';\r\nimport imgTheater from '../../../assets/images/theater.png';\r\nimport '../genero/style.css'\r\nimport Input from '../../../components/input';\r\nimport Button from '../../../components/button';\r\n\r\nfunction Genero() {\r\n        //prop string genero {get; set;} = \"\";\r\n        const [idGenero, setIdGenero] = useState(0);\r\n        const [genero, setGenero] = useState('');\r\n\r\n        const [generos, setGeneros] = useState([]);\r\n\r\n        //useEffect te permite executar efeitos colaterais em componentes funcionais\r\n        //Buscar dados é um exemplo de efeito colateral\r\n        //usando o useEffect informo ao React que o componente somente depois da renderização\r\n        //é executado depois da renderização do componente, quando ele já estiver montado na DOM\r\n        useEffect(() => {\r\n            listar();\r\n        }, []);\r\n\r\n        const listar = () => {\r\n            fetch('http://localhost:5000/api/generos', {\r\n                method: 'GET',\r\n                headers: {\r\n                    //Bearer authentication é o token authentication, um Schema para autenticação HTTP \r\n                    //O Bearer identifica recursos protegidos por um OAuth2.\r\n                    authorization: 'Bearer ' + localStorage.getItem('token-filmes')\r\n                }\r\n            })\r\n\r\n                .then(response => response.json())\r\n                .then(dados => {\r\n                    setGeneros(dados);\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n\r\n        const trash = (id: number) => {\r\n            if (window.confirm('Deseja excluir o Genero?')) {\r\n                fetch('http://localhost:5000/api/generos/' + id, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        authorization: 'Bearer ' + localStorage.getItem('token-filmes')\r\n                    }\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(dados => {\r\n                        listar();\r\n                    })\r\n                    .catch(err => console.error(err));\r\n            }\r\n        }\r\n\r\n        const refresh = (id: number) => {\r\n            fetch('http://localhost:5000/api/generos/' + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    authorization: 'Bearer ' + localStorage.getItem('token-filmes')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(dados => {\r\n                    setIdGenero(dados.idGenero);\r\n                    setGenero(dados.nome);\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n\r\n        const salvar = () => {\r\n            const form = {\r\n                nome: genero\r\n            };\r\n\r\n\r\n\r\n            const method = (idGenero === 0 ? 'POST' : 'PUT');\r\n            const urlRequest = (idGenero === 0 ? 'http://localhost:5000/api/generos' : 'http://localhost:5000/api/generos/' + idGenero);\r\n\r\n            fetch(urlRequest, {\r\n                method: method,\r\n                body: JSON.stringify(form),\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    authorization: 'Bearer ' + localStorage.getItem('token-filmes')\r\n                }\r\n            })\r\n                .then(() => {\r\n                    alert('Genero cadastrado');\r\n                    setIdGenero(0);\r\n                    setGenero('');\r\n                    listar();\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header description={\"Faça o login e acesse a Coletânea\"} />\r\n                <main>\r\n                    <div className=\"imgTitulo\">\r\n                    <h2>Gênero</h2>\r\n                        <img className=\"theater\" src={imgTheater} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"ListGenero\">\r\n\r\n                    </div>\r\n                    \r\n                </main>\r\n                <Footer />\r\n            </div>\r\n\r\n        );\r\n}\r\nexport default Genero;"]},"metadata":{},"sourceType":"module"}